name: Build Wheels

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64
            artifact: wheels-linux-x86_64
            args: --release --out dist --find-interpreter
            manylinux: auto
            before-script-linux: |
              yum install -y openblas-devel
          - os: ubuntu-latest
            target: aarch64
            artifact: wheels-linux-aarch64
            args: --release --out dist --find-interpreter
            manylinux: auto
            before-script-linux: |
              yum install -y openblas-devel
          - os: windows-latest
            target: x86_64
            artifact: wheels-windows
            args: --release --out dist --find-interpreter
            manylinux: off
            before-script-linux: ""
          - os: macos-latest
            target: x86_64
            artifact: wheels-macos
            args: --release --out dist --find-interpreter --universal2
            manylinux: off
            before-script-linux: ""
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          allow-prereleases: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: ${{ matrix.args }}
          sccache: "true"
          manylinux: ${{ matrix.manylinux }}
          before-script-linux: ${{ matrix.before-script-linux }}

      - name: Upload wheels
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.artifact }}
          path: dist/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v5
        with:
          name: sdist
          path: dist

  test-wheels:
    name: Test wheels on ${{ matrix.os }}
    needs: [build-wheels]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.10"
            artifact: wheels-linux-x86_64
          - os: ubuntu-latest
            python-version: "3.11"
            artifact: wheels-linux-x86_64
          - os: ubuntu-latest
            python-version: "3.12"
            artifact: wheels-linux-x86_64
          - os: ubuntu-latest
            python-version: "3.13"
            artifact: wheels-linux-x86_64
          - os: ubuntu-latest
            python-version: "3.14"
            artifact: wheels-linux-x86_64
          - os: windows-latest
            python-version: "3.10"
            artifact: wheels-windows
          - os: windows-latest
            python-version: "3.11"
            artifact: wheels-windows
          - os: windows-latest
            python-version: "3.12"
            artifact: wheels-windows
          - os: windows-latest
            python-version: "3.13"
            artifact: wheels-windows
          - os: windows-latest
            python-version: "3.14"
            artifact: wheels-windows
          - os: macos-latest
            python-version: "3.10"
            artifact: wheels-macos
          - os: macos-latest
            python-version: "3.11"
            artifact: wheels-macos
          - os: macos-latest
            python-version: "3.12"
            artifact: wheels-macos
          - os: macos-latest
            python-version: "3.13"
            artifact: wheels-macos
          - os: macos-latest
            python-version: "3.14"
            artifact: wheels-macos
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Download wheels
        uses: actions/download-artifact@v6
        with:
          name: ${{ matrix.artifact }}
          path: dist

      - name: Upgrade pip and install wheel
        run: |
          python -m pip install --upgrade pip
          pip install --find-links dist dervflow
          pip install pytest numpy

      - name: Test import
        run: python -c "import dervflow; print(dervflow.__version__)"

      - name: Run basic tests
        run: pytest tests/python/test_options.py -v -k "test_atm_call_price"

  merge-artifacts:
    name: Merge wheel artifacts
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v6
        with:
          path: all-wheels

      - name: Merge artifacts
        run: |
          mkdir -p dist
          find all-wheels -name "*.whl" -exec cp {} dist/ \;
          find all-wheels -name "*.tar.gz" -exec cp {} dist/ \;

      - name: Upload merged artifacts
        uses: actions/upload-artifact@v5
        with:
          name: all-wheels
          path: dist
