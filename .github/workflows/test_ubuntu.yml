name: Test (Ubuntu)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-tests:
    name: Rust Tests (Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ubuntu-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ubuntu-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ubuntu-cargo-build-target-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-cargo-build-target-

      - name: Check formatting
        if: matrix.rust == 'stable'
        run: cargo fmt -- --check

      - name: Run clippy
        if: matrix.rust == 'stable'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --verbose --all-features

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Run doc tests
        run: cargo test --doc

  python-tests:
    name: Python Tests (Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-cargo-${{ matrix.python-version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-cargo-${{ matrix.python-version }}-
            ubuntu-cargo-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Upgrade pip and install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install "maturin[patchelf]" numpy

      - name: Build Python package
        run: maturin develop --release

      - name: Install test dependencies
        run: pip install pytest scipy pandas

      - name: Run Python tests
        run: pytest tests/python -v

  type-checking:
    name: Type Checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          allow-prereleases: true

      - name: Install dependencies
        run: |
          pip install mypy numpy types-setuptools types-python-dateutil

      - name: Run mypy
        run: mypy python/dervflow --strict --ignore-missing-imports

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install black ruff

      - name: Check black formatting
        run: black --check python/

      - name: Run ruff
        run: ruff check python/
